@using CinemaTicketHub.Models;
@model CinemaTicketHub.Models.SelectSeatDataModel
@{
    Layout = null;

    //Làm sạch giỏ hàng trước khi thêm
    List<Ghe> lstGhe = Session["Cart"] as List<Ghe>;
    List<Cart> lstMonAn = Session["Cart2"] as List<Cart>;
    if (lstGhe != null || lstMonAn != null)
    {
        lstGhe.Clear();
        lstMonAn.Clear();
    }
}

<head>
    <link href="~/Content/css/seatstyle.css" rel="stylesheet">

    <style>
        .footer {
            display: flex;
            justify-content: space-between;
        }

        .left-column {
            display: flex;
        }

        .right-column {
            margin-left: auto;
        }

        .rounded-div {
            border-radius: 40px;
            padding: 10px 11px;
            background-color: white;
        }
    </style>
</head>

<body>
    <div class="header">
        <h1 style="color: #dc3545">@ViewBag.moviesdetail.Phim.TenPhim</h1>
        <p><b style="color: gold; font-size: 18px">[Suất chiếu: @ViewBag.moviesdetail.MaSuatChieu]</b> <b style="font-size: 17px">Ngày chiếu: @ViewBag.moviesdetail.NgayChieu.ToShortDateString() - Giờ chiếu: @ViewBag.moviesdetail.GioBatDau.ToString("hh\\:mm") - @ViewBag.moviesdetail.PhongChieu.TenPhong</b></p>
    </div>
    <div class="screen" style="width: 800px; margin-bottom: 70px"><h1 style="color: black; font-size: 30px; text-align: center">SCREEN</h1></div>
    <div class="seat-container" style="align-items: center; justify-content: center; width: 95vh">
        <div class="row" style="margin-left: 50px">

            @using (Html.BeginForm("SeatSelection", "Booking", new { MaSC = ViewBag.moviesdetail.MaSuatChieu, FormMethod.Post }))
            {
                for (int i = 0; i < Model.listcheck.Count(); i++)
                {

                    if (Model.listcheck[i].Status == true)
                    {
                        <label class="checkbox-label">
                            @Html.CheckBoxFor(c => c.listcheck[i].Selected, new { @class = "checkboxseat", data_label = Model.listcheck[i].Name, disabled = "disabled", style = "background-color: #dc3545" })
                            @Html.HiddenFor(c => c.listcheck[i].Name)
                            @Html.HiddenFor(c => c.listcheck[i].SeatId)
                            @Html.HiddenFor(c => c.listcheck[i].Status)
                            @Html.HiddenFor(c => c.listcheck[i].MaGhe)
                            @Html.HiddenFor(c => c.listcheck[i].MaSuatChieu)
                        </label>
                    }
                    else
                    {
                        <label class="checkbox-label">
                            @Html.CheckBoxFor(c => c.listcheck[i].Selected, new { @class = "checkboxseat", data_label = Model.listcheck[i].Name, onchange = "updateContinueButton()" })
                            @Html.HiddenFor(c => c.listcheck[i].Name)
                            @Html.HiddenFor(c => c.listcheck[i].SeatId)
                            @Html.HiddenFor(c => c.listcheck[i].Status)
                            @Html.HiddenFor(c => c.listcheck[i].MaGhe)
                            @Html.HiddenFor(c => c.listcheck[i].MaSuatChieu)
                        </label>
                    }
                }
                <button id="btnthanhtoan2" type="submit" class="btn danger" style="border-radius: 40px; display: none">Thanh toán 1</button>
            }
        </div>
    </div>

    <script>
        function thanhToan() {
            var btnthanhtoan2 = document.getElementById('btnthanhtoan2');
            btnthanhtoan2.click();
        }
    </script>
</body>

<footer class="footer">
    <div class="left-column" style="margin-left: 10px">
        <div class="row">
            <label class="checkbox-label">
                <input type="checkbox" style="appearance: none; -webkit-appearance: none; width: 50px; height: 50px; border-top-left-radius: 20px; border-top-right-radius: 20px; outline: none; display: flex; align-items: center; justify-content: center; margin-bottom: 20px; background-color: #444451" disabled>
            </label>
            <span style="margin: 18px 50px 0 0">Ghế trống</span>

            <label class="checkbox-label">
                <input type="checkbox" style=" appearance: none; -webkit-appearance: none; width: 50px; height: 50px; border-top-left-radius: 20px; border-top-right-radius: 20px; outline: none; display: flex; align-items: center; justify-content: center; margin-bottom: 20px; background-color: white" disabled>
            </label>
            <span style="margin: 18px 50px 0 0">Ghế đang chọn</span>

            <label class="checkbox-label">
                <input type="checkbox" style=" appearance: none; -webkit-appearance: none; width: 50px; height: 50px; border-top-left-radius: 20px; border-top-right-radius: 20px; outline: none; display: flex; align-items: center; justify-content: center; margin-bottom: 20px; background-color: #dc3545" disabled>
            </label>
            <span style="margin: 18px 50px 0 0">Ghế đã chọn</span>
        </div>
    </div>
    <div class="right-column" style="margin-right: 50px">
        <div class="rounded-div">
            <div class="row">
                <p style="margin-right: 20px; color: black"><b>TỔNG TIỀN:</b> <b id="totalAmount" style="font-size: 20px">0</b></p>
                <button id="continueButton" type="button" class="btn danger" disabled style="border-radius: 40px" onclick="thanhToan()">Tiếp tục</button> @*Nếu không chọn ghế thì không thể tiếp tục thanh toán*@
            </div>
        </div>
    </div>

    <script>
        // Lắng nghe sự kiện thay đổi của checkbox
        var checkboxes = document.querySelectorAll('.checkboxseat');
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', calculateTotal);
        });

        // Tính tổng tiền khi có sự thay đổi checkbox
        function calculateTotal() {
            var total = 0;
            checkboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    total++;
                }
            });
            var totalPrice = total * 100000;
            document.getElementById('totalAmount').textContent = formatNumber(totalPrice);
        }

        // Định dạng số với dấu phẩy ngăn cách hàng nghìn
        function formatNumber(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        //Kiểm tra nếu không chọn ghế thì không thể tiếp tục thanh toán
        function updateContinueButton() {
            var checkboxes = document.getElementsByClassName('checkboxseat');
            var continueButton = document.getElementById('continueButton');

            var anyCheckboxSelected = false;
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    anyCheckboxSelected = true;
                    break;
                }
            }

            continueButton.disabled = !anyCheckboxSelected;
        }
    </script>
</footer>